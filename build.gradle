buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "org.grails.plugins:hibernate5:7.0.4"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
    }
}

version "0.1"
group "my.tester.app"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "com.github.erdi.webdriver-binaries"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: "org.grails.grails-gsp"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.18.Final"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "javax.xml.bind:jaxb-api:2.3.1"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.2.0'
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
    compile "com.lowagie:itext:2.1.7"
    compile("net.sf.jasperreports:jasperreports:5.6.1") {
        exclude group: 'antlr', module: 'antlr'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.ant', module: 'ant'
        exclude group: 'mondrian', module: 'mondrian'
        exclude group: 'commons-javaflow', module: 'commons-javaflow'
        exclude group: 'net.sourceforge.barbecue', module: 'barbecue'
        exclude group: 'xml-apis', module: 'xml-apis'
        exclude group: 'xalan', module: 'xalan'
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'org.hibernate ', module: 'hibernate'
        exclude group: 'javax.xml.soap', module: 'saaj-api'
        exclude group: 'javax.servlet', module: 'servlet-api'
        exclude group: 'org.springframework', module: 'spring-core'
        exclude group: 'org.beanshell', module: 'bsh'
        exclude group: 'org.springframework', module: 'spring-beans'
        exclude group: 'jaxen', module: 'jaxen'
        exclude group: 'net.sf.barcode4j ', module: 'barcode4j'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-svg-dom'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-xml'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-awt-util'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-dom'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-css'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-gvt'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-script'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-svggen'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-util'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-bridge'
        exclude group: 'javax.persistence', module: 'persistence-api'
        exclude group: 'eclipse', module: 'jdtcore'
        exclude group: 'org.olap4j', module: 'olap4j'
    }
    compile "org.apache.poi:poi:3.10-FINAL"
    compile "commons-io:commons-io:2.5"
    compile 'net.sf.jasperreports:jasperreports:6.20.0'
}
    bootRun {
        ignoreExitValue true
        jvmArgs(
                '-Dspring.output.ansi.enabled=always',
                '-noverify',
                '-XX:TieredStopAtLevel=1',
                '-Xmx1024m')
        sourceResources sourceSets.main
        String springProfilesActive = 'spring.profiles.active'
        systemProperty springProfilesActive, System.getProperty(springProfilesActive)
    }

    tasks.withType(GroovyCompile) {
        configure(groovyOptions) {
            forkOptions.jvmArgs = ['-Xmx1024m']
        }
    }

    webdriverBinaries {
        chromedriver '2.45.0'
        geckodriver '0.24.0'
    }

    tasks.withType(Test) {
        systemProperty "geb.env", System.getProperty('geb.env')
        systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
        systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
        systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
    }


    assets {
        minifyJs = true
        minifyCss = true
    }
